{"version":3,"sources":["App.js","index.js"],"names":["App","formData","setFormData","useState","username","email","password","userType","businessBio","businessFields","tasks","setTasks","topBusinesses","setTopBusinesses","ratingData","setRatingData","businessId","rating","comment","handleChange","e","name","value","target","prevData","[object Object]","handleCheckboxChange","checked","updatedFields","filter","field","handleRatingChange","useEffect","async","tasksResponse","axios","get","data","topBusinessesResponse","error","console","fetchData","React","createElement","className","onSubmit","preventDefault","response","post","log","alert","type","placeholder","onChange","required","Fragment","token","localStorage","getItem","headers","x-auth-token","min","max","map","business","key","_id","averageRating","toFixed","totalRatings","task","title","description","category","location","price","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72cb2118.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    userType: 'customer',\r\n    businessBio: '',\r\n    businessFields: [],\r\n  });\r\n\r\n  const [tasks, setTasks] = useState([]);\r\n  const [topBusinesses, setTopBusinesses] = useState([]);\r\n  const [ratingData, setRatingData] = useState({\r\n    businessId: '',\r\n    rating: '',\r\n    comment: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = (e) => {\r\n    const { value, checked } = e.target;\r\n    setFormData((prevData) => {\r\n      const updatedFields = checked\r\n        ? [...prevData.businessFields, value]\r\n        : prevData.businessFields.filter((field) => field !== value);\r\n      return {\r\n        ...prevData,\r\n        businessFields: updatedFields,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('adel01.herokuapp.com/api/users/register', formData);\r\n      console.log(response.data);\r\n      alert('Registration successful!');\r\n    } catch (error) {\r\n      console.error('Error registering user:', error);\r\n      alert('Error registering user');\r\n    }\r\n  };\r\n\r\n  const handleRatingChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setRatingData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleRatingSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://adel01.herokuapp.com/api/ratings', ratingData, {\r\n        headers: {\r\n          'x-auth-token': token,\r\n        },\r\n      });\r\n      console.log(response.data);\r\n      alert('Rating submitted successfully!');\r\n    } catch (error) {\r\n      console.error('Error submitting rating:', error);\r\n      alert('Error submitting rating');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const tasksResponse = await axios.get('http://adel01.herokuapp.com/api/tasks');\r\n        setTasks(tasksResponse.data);\r\n\r\n        const topBusinessesResponse = await axios.get('http://adel01.herokuapp.com/api/ratings/top-businesses');\r\n        setTopBusinesses(topBusinessesResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Aidel</h1>\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Username\" value={formData.username} onChange={handleChange} required />\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\r\n        <select name=\"userType\" value={formData.userType} onChange={handleChange}>\r\n          <option value=\"customer\">Customer</option>\r\n          <option value=\"business\">Business</option>\r\n        </select>\r\n        {formData.userType === 'business' && (\r\n          <>\r\n            <textarea name=\"businessBio\" placeholder=\"Business Bio\" value={formData.businessBio} onChange={handleChange} required />\r\n            <fieldset>\r\n              <legend>Select Fields:</legend>\r\n              <label>\r\n                <input type=\"checkbox\" name=\"businessFields\" value=\"Sports & Healthcare\" onChange={handleCheckboxChange} />\r\n                Sports & Healthcare\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" name=\"businessFields\" value=\"Education, Tutoring and Consulting\" onChange={handleCheckboxChange} />\r\n                Education, Tutoring and Consulting\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" name=\"businessFields\" value=\"Manual labour, home services and repairs\" onChange={handleCheckboxChange} />\r\n                Manual labour, home services and repairs\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" name=\"businessFields\" value=\"Event planning, catering and decoration\" onChange={handleCheckboxChange} />\r\n                Event planning, catering and decoration\r\n              </label>\r\n              <label>\r\n                <input type=\"checkbox\" name=\"businessFields\" value=\"Fashion & Tailoring\" onChange={handleCheckboxChange} />\r\n                Fashion & Tailoring\r\n              </label>\r\n            </fieldset>\r\n          </>\r\n        )}\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n\r\n      {/* Rating submission form */}\r\n      <h2>Submit Rating</h2>\r\n      <form onSubmit={handleRatingSubmit}>\r\n        <input type=\"text\" name=\"businessId\" placeholder=\"Business ID\" value={ratingData.businessId} onChange={handleRatingChange} required />\r\n        <input type=\"number\" name=\"rating\" placeholder=\"Rating (1-5)\" value={ratingData.rating} onChange={handleRatingChange} min=\"1\" max=\"5\" required />\r\n        <textarea name=\"comment\" placeholder=\"Comment\" value={ratingData.comment} onChange={handleRatingChange} />\r\n        <button type=\"submit\">Submit Rating</button>\r\n      </form>\r\n\r\n      <h2>Top Businesses</h2>\r\n      <ul>\r\n        {topBusinesses.map((business) => (\r\n          <li key={business._id}>\r\n            <h3>{business.username}</h3>\r\n            <p>Average Rating: {business.averageRating.toFixed(1)}</p>\r\n            <p>Total Ratings: {business.totalRatings}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Available Tasks</h2>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task._id}>\r\n            <h3>{task.title}</h3>\r\n            <p>{task.description}</p>\r\n            <p>Category: {task.category}</p>\r\n            <p>Location: {task.location}</p>\r\n            <p>Price: ${task.price}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}